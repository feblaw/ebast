@{
    ViewData["Title"] = " BAST";
    var FirsMonth = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    var LastMonth = FirsMonth.AddMonths(1).AddDays(-1);
}
@section breadcrumb{
    <li>
        <span>BAST Registration</span>
    </li>
}
<h1 class="page-title">BAST Registration <small>List</small></h1>
<div class="portlet light portlet-fit portlet-datatable bordered">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-blue sbold uppercase">BAST Registration List</span>
        </div>
        <div class="pull-right">
            <div class="portlet-body">
                <div class="box-footer clearfix" style="display: inline-flex">
                    @if (User.IsInRole("Regional Project Manager") || User.IsInRole("Head Of Service Line"))
            {
                        <form role="form" id="FormApprove" asp-action="ApproveMultiple">
                            <input type="hidden" class="ListId" name="data" value="" required />
                            <a href="javascript:void(0);" class="btn btn-danger pull-right" id="btn-reject" style="margin-left:10px;">Reject</a>
                            <button type="submit" name="status" value="2" class="btn btn-primary pull-right">Giving Approval</button>
                        </form>
                    }
                    <div id="toolbox" style="margin-left: 10px">
                    </div>
                    @if (User.IsInRole("HR Agency") || User.IsInRole("Administrator"))
            {
                        <a style="margin-left:10px;" class="btn btn-primary" href="@Url.Action("Create")"><i class="fa fa-plus-circle"></i> Add new</a>
                    }
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="portlet-body">
        <table id="table" class="table table-striped table-bordered table-hover no-border-bottom">
            <thead>
                <tr>
                    <th rowspan="2">Action</th>
                    <th rowspan="2">Submited By</th>
                    <th>Multiple Approve</th>
                    @*<th rowspan="2">Timesheet Type</th>*@
                    <th rowspan="2">WP Name</th>
                    <th rowspan="2">Period</th>
                    <th rowspan="2">Start Date</th>
                    <th rowspan="2">End Date</th>
                    @*<th rowspan="2">Periode End</th>
                    <th rowspan="2">Total Hours</th>
                    <th rowspan="2">Total Annual Leave</th>
                    <th rowspan="2">Total Remaining Days Off</th>*@
                    <th rowspan="2">Description</th>
                    <th rowspan="2">PO Number</th>
                    <th colspan="3"><center>RPM Approval</center></th>
                    <th colspan="3"><center>Service Line Approval</center></th>
                    @*<th rowspan="2">Cost Center</th>
                    <th rowspan="2">Network Number</th>
                    <th rowspan="2">Activity</th>
                    <th rowspan="2">Organization Unit</th>
                    <th rowspan="2">Sub Organization Unit</th>*@
                </tr>
                <tr>
                    <th class="text-center">
                        @if (User.IsInRole(" Regional Project Manager") || User.IsInRole("Head Of Service Line"))
                        {
                            <input type="checkbox" id="check-all" />
                        }
                        else
                        {
                            <label>-</label>
                        }
                    </th>
                    <th>Status</th>
                    <th>RPM</th>
                    <th>Approve Date - Remark</th>
                    <th>Status</th>
                    <th>Head Of Service Line</th>
                    <th>Approve Date - Remark</th>
                </tr>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    @*<th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>*@
                </tr>
                @*<tr class="hidden">
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>*@
            </thead>
            @*<tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </tfoot>*@
        </table>
        <p>Sum : @ViewBag.SumHours</p>
    </div>
</div>
<div id="ModalReject" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Rejected Confirmation</h4>
            </div>
            <div class="modal-body">
                <form role="form" id="FormApprove" asp-action="MultiReject">
                    <input type="hidden" class="ListId" name="data" value="" required />
                    <div class="box-body">
                        <div class="form-group">
                            <label for="remarks">Remarks</label>
                            <textarea id="remarks" name="remarks" class="form-control" rows="5" required></textarea>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer clearfix">
                        <button type="button" class="btn btn-default pull-right" data-dismiss="modal" style="margin-left:10px;">Cancel</button>
                        <button type="submit" class="btn btn-primary pull-right">Submit</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="ModalExport" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Please select date</h4>
            </div>
            <div class="modal-body">
                <form role="form" asp-controller="TimeSheetActivity" asp-action="Download2" asp-area="Export">
                    <div class="box-body">
                        <div class="form-group">
                            <label for="remarks">First Date</label>
                            <div class="input-group">
                                <input type="text" class="form-control form_datetime2" id="ValueDate" name="ValueDate" value="@FirsMonth.Date.ToString("MM-yyyy")" required />
                                <span class="input-group-btn">
                                    <button class="btn btn-secondary" type="button"><i class="fa fa-calendar"></i></button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer clearfix">
                        <button type="button" class="btn btn-default pull-right" data-dismiss="modal" style="margin-left:10px;">Cancel</button>
                        <button type="submit" class="btn btn-primary pull-right">Submit</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
@if (!User.IsInRole("HR Agency"))
{
    <div id="Approver"></div>
}

@if (User.IsInRole("Regional Project Manager") || User.IsInRole("Administrator"))
{
    <div id="IsPm"></div>
}
@if (User.IsInRole("Head Of Service Line") || User.IsInRole("Administrator"))
{
    <div id="IsLm"></div>
}

@{
    Html.RenderPartial("_FixedHeaderDatatablesAssets");
}
<style>
    .DTFC_LeftBodyWrapper {
        top: 17px !important;
    }

        .DTFC_LeftBodyWrapper table.DTFC_Cloned thead {
            display: none;
        }

    table {
        table-layout: fixed;
        word-wrap: break-word;
    }
</style>
@section scripts{
    <script>
        $(document).ready(function () {
            $common.setMenu("#menu-registation", "#menu-registation");


            var approved = @((TempData["Approved"] != null).ToString().ToLower());
            if (approved == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.success("Timesheet request has been approved");
            }

            var success = @((TempData["Success"] != null).ToString().ToLower());
            if (success == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.success("Timesheet request has been added");
            }

            var ProfileId = parseInt('@ViewBag.PreofileId');

            var datatableOption = {
                ajaxMethod: "GET",
                listUrl: "/Admin/Api/Registration/GetTimeSheet",
                detailUrl: "@Url.Action("Details")/",
                editUrl: "@Url.Action("Edit")/",
                deleteUrl: "/admin/api/registration/",
                deleteAlertSuccess: "Activity registration has been removed",
                orderCellsTop:false,
                pagingType:"full_numbers",
                fixedColumns: 2,
                columnDefs: [
                    {
                        "targets": 1, // Submitted By
                        "data": "contractor",
                        name: "Contractor.Name",
                    },
                    //{
                    //    "targets": 3,
                    //    "data": "timeSheetType", // Timesheet Type
                    //    name: "TimeSheetType.Type",
                    //},
                    {
                        "targets": 3,
                        "data": "vacancy", // wp name
                        name: "vacancy.Name",
                    },
                    {
                        "targets": 4, // Periode Start
                        "data": "dateStart",
                        name: "dateStart",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            return moment(date).format("MMM YYYY");
                        }
                    },
                    {
                        "targets": 5, // Periode Start
                        "data": "startDate",
                        name: "vacancy.startDate",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            return moment(date).format("DD MMM YYYY");
                        }
                    },
                    {
                        "targets": 6, // Periode Start
                        "data": "endDate",
                        name: "vacancy.endDate",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            return moment(date).format("DD MMM YYYY");
                        }
                    },
                    //{
                    //    "targets": 6, // Periode End
                    //    "data": "dateEnd",
                    //    name: "dateEnd",
                    //    "render": function (data, type, row, meta) {
                    //        var date = new Date(data);
                    //        return moment(date).format("DD MMM YYYY");
                    //    }
                    //},
                    // {
                    //     "targets": 7, // Total Hours
                    //     "data": "totalHours",
                    //     name: "OtherInfo",
                    // },
                    // {
                    //     "targets": 8, // Annual Leave
                    //     "data": "dateStart",
                    //     name: "dateStart",
                    //     "render": function (data, type, row, meta) {
                    //         var status1 = parseInt(row.statusOne);
                    //         var status2 = parseInt(row.statusTwo);

                    //         if(row.isAnnual==true && status1==2  && status2 == 2){
                    //             if(parseInt(row.totalHours)==0){
                    //                 return "Annual Leave is Expired";
                    //             }else{
                    //                 return Math.ceil(row.totalHours/24)+" days";
                    //             }
                    //         }else{
                    //             return "-"
                    //         }
                    //     }
                    // },
                    // {
                    //     "targets": 9, // Remaining
                    //     "data": "remainingDays",
                    //     name: "remainingDays",
                    //     "render": function (data, type, row, meta) {
                    //         if(row.isAnnual==true){
                    //             var status1 = parseInt(row.statusOne);
                    //             var status2 = parseInt(row.statusTwo);
                    //             if(status1==2 && status2==2){
                    //                 return data+"  Days";
                    //             }else{
                    //                 return "-";
                    //             }
                    //         }else{
                    //             return "-";
                    //         }
                    //     }
                    // },
                    {
                        "targets": 7,  // Description
                        "data": "description",
                        name:"Description",
                    },
                    {
                        "targets": 8,
                        "data": "poNumber", // wp name
                        name: "vacancy.poNumber",
                    },
                    {
                        "targets": 9, // Status Approval PM
                        "data": "statusOne",
                        name: "statusOne",
                        "render": function (data, type, row, meta) {
                            return GetStatus(data);
                        }

                    },
                    {
                        "targets": 10, // PM Name
                        "data": "projectManager",
                        name: "ApproverOne.Name",
                    },
                    {
                        "targets": 11, // Approve Date Remark PM
                        "data": "approvedOneDate",
                        name: "approvedOneDate",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            var Status = parseInt(row.statusOne);
                            if (Status == 2) {
                                return moment(date).format("DD MMM YYYY");
                            } else {
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 12, // Status Approval LM
                        "data": "statusTwo",
                        name: "statusTwo",
                        "render": function (data, type, row, meta) {
                            return GetStatus(data);
                        }
                    },
                    {
                        "targets": 13, // LM
                        "data": "lineManager",
                        name: "ApproverTwo.Name",
                    },
                    {
                        "targets": 14, // Approve Date Remark LM
                        "data": "approvedTwoDate",
                        name: "approvedTwoDate",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            var Status = parseInt(row.statusTwo);
                            if (Status == 2) {
                                return moment(date).format("DD MMM YYYY");
                            } else {
                                return "-";
                            }
                        }
                    },
                    //{
                    //    "targets": 17, // Cost Center
                    //    "data": "costCenter",
                    //    name: "CostCenter.Description",
                    //},
                    //{
                    //    "targets": 18, // Network Number
                    //    "data": "networkNumber",
                    //    name: "Network.Description",
                    //},
                    //{
                    //    "targets": 19, // Activity
                    //    "data": "activiy",
                    //    name: "Activity.Description",
                    //},
                    //{
                    //    "targets": 20, // Organization Unit
                    //    "data": "department",
                    //    name: "Departement.Name",
                    //},
                    //{
                    //    "targets": 21, // Sub Organization Unit
                    //    "data": "departmentSub",
                    //    name: "DepartementSub.SubName",
                    //},
                    {
                        "targets": 0, // Action
                        "data": "createdAt",
                        name: "createdAt",
                        "render": function (data, type, row, meta) {
                            //var name = row.contractor.name;
                            var status1 = parseInt(row.statusOne);
                            var status2 = parseInt(row.statusTwo);
                            var Id = row.id;
                            var Idx = meta.row;

                            if (document.getElementById("Approver") != null) {
                                return "<a class='detail' title='Detail Activity'><i class='fa fa-info'></i></a>&nbsp;&nbsp;&nbsp;" +
                                "<a OnClick='Approve(\"" + Id + "\",\"" + Idx + "\",\"" + status1 + "\",\"" + status2 + "\")' title='Approve this source'><i class='fa fa-gavel'></i></a>&nbsp;&nbsp;&nbsp;";
                            } else {
                                @if (User.IsInRole("HR Agency") || User.IsInRole("Administrator"))
                                {
                                    if(User.IsInRole("Administrator"))
                                    {
                                        @:return "<a class='detail' title='Detail Activity'><i class='fa fa-info'></i></a>&nbsp;&nbsp;&nbsp;" +
                                        @:"<a class='edit' title='Edit Entry'><i class='fa fa-edit'></i></a>&nbsp;&nbsp;&nbsp;" +
                                        @: "<a class='remove' title='Remove Entry'><i class='fa fa-trash'></i></a>";
                                    }
                                    else
                                    {
                                        @:if(status1==2 && status2==2){
                                        @:return "<a class='detail' title='Detail Activity'><i class='fa fa-info'></i></a>&nbsp;&nbsp;&nbsp;";
                                        @:}else {
                                        @:return "<a class='detail' title='Detail Activity'><i class='fa fa-info'></i></a>&nbsp;&nbsp;&nbsp;" +
                                        @: "<a class='remove' title='Remove Entry'><i class='fa fa-trash'></i></a>";
                                        @:}
                                    }
                                }
                                else
                                {
                                    @:return "<a class='detail' title='Detail Activity'><i class='fa fa-info'></i></a>&nbsp;&nbsp;&nbsp;";
                                 }
                            }
                        },
                        "width": "80px",
                        className: "text-center"
                    },
                    {
                        "targets": 2, // Checked
                        "data": "createdAt",
                        name: "createdAt",
                        "render": function (data, type, row, meta) {
                            var status1 = parseInt(row.statusOne);
                            var status2 = parseInt(row.statusTwo);
                            var ProjectManager = parseInt(row.approverOneId);
                            var LineManager = parseInt(row.approverTwoId);
                            var ProfileId = parseInt('@ViewBag.PreofileId');
                            if(document.getElementById("Approver")==null){
                                $('#check-all').hide();
                                return "-";
                            }else{
                                if(status1 == 1 && status2 ==1 && ProjectManager == ProfileId){
                                    return CheckBox(row.id);
                                }else if(status1 == 2 && status2 ==1 && LineManager == ProfileId){
                                    return CheckBox(row.id);
                                }else{
                                    return "-";
                                }
                                return "-";
                            }
                        },
                        "width": "30px",
                        className: "text-center"
                    },
                ]
            }

            $datatables.init("#table", datatableOption);
            var table = $('#table')
                .on('init.dt', function(e, settings, json) { disableImmediateSearchDt(e, settings, json, '#table'); })
                .DataTable(); theDataTable = table;
            table.order( [[0,'desc']] );
            //table.search('').columns().search('').draw();

            //if(document.getElementById("Approver"))
            //{
            //    new $.fn.dataTable.Buttons(table, {
            //        buttons:
            //        [{
            //            text:'<i class="fa fa-file-excel-o"></i> Export to Excel',
            //            extend:'excel',
            //            exportOptions: {
            //                columns: [2,3,4,5,6,7,8,9,10,11,12,13,14]
            //            },
            //            action: function (e, dt, button, config) {
            //                //window.location.href = "/Export/TimeSheetActivity/Download";
            //                $('#ModalExport').modal('show');
            //            }
            //        }]
            //    });
            //    table.buttons( 0, null ).container().appendTo( '#toolbox' );
            //    $('.buttons-excel').each(function() {
            //        $(this).removeClass('dt-button buttons-excel buttons-html5').addClass('btn btn-default')
            //    })
            //}

            var StatusTravel = function(val){
                if(val=='0'){
                    return "<label class='label label-danger'><i class='fa fa-close'></i> Cancel</label>";
                }
                if(val=='1'){
                    return "<label class='label label-success'><i class='fa fa-plane'></i> Active</label>";
                }
                if(val=='2'){
                    return "<label class='label label-primary'><i class='fa fa-check'></i> Done</label>";
                }
            }

            $('#table tbody').on( 'click', 'tr', function () {
                if (event.target.type !== 'checkbox') {
                    $(':checkbox', this).trigger('click');
                }
            } );

            $('#btn-reject').click(function(){
                $('#remarks').val('');
                var DataId = $('#ModalReject .ListId').val();
                if(DataId){
                    $('#ModalReject').modal('show');
                }
            });


            // Check Event Trigger

            table.on('click','.srf',function(){
                var checkedVals = $('.srf:checkbox:checked').map(function() {
                    return this.value;
                }).get();
                var result = checkedVals.join(",");
                $('.ListId').val(result);
            });

            $('#check-all').click(function(e){
                if($(this).prop('checked')){
                    $('#table tbody tr td input[type="checkbox"]').each(function(){
                        $(this).prop('checked', true);
                    });
                }else{
                    $('#table tbody tr td input[type="checkbox"]').each(function(){
                        $(this).prop('checked', false);
                    });
                }
                var checkedVals = $('.srf:checkbox:checked').map(function() {
                    return this.value;
                }).get();
                var result = checkedVals.join(",");
                $('.ListId').val(result);
            });

            yadcf.init(table, [
            //{
            //    column_number: 1,
            //    filter_type: 'text',
            //    filter_reset_button_text: false,
            //    filter_default_label: ''
            //},
            {
                column_number: 3,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''
            },
            {
                column_number: 4,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''
            },
            {
                column_number: 5,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''

            },
            {
                column_number: 6,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''

            },
            {
                column_number: 7,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''

            },
            {
                column_number: 8,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''

            },
             {
                 column_number: 9,
                 filter_reset_button_text: false,
                 filter_default_label: 'Select Filter',
                 data: [
                     {
                         value: 'Reject',
                         label: 'Rejected'
                     }, {
                         value: 'Waiting',
                         label: 'Waiting'
                     }, {
                         value: 'Approved',
                         label: 'Approved'
                     }
                 ]
             },
            {
                column_number: 10,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''
            },

             {
                 column_number: 12,
                 filter_reset_button_text: false,
                 filter_default_label: 'Select Filter',
                 data: [
                  {
                     value: 'Reject',
                     label: 'Rejected'
                 }, {
                     value: 'Waiting',
                     label: 'Waiting'
                 }, {
                     value: 'Approved',
                     label: 'Approved'
                 }
                 ]
             },
             {
                 column_number: 13,
                 filter_type: 'text',
                 filter_reset_button_text: false,
                 filter_default_label: ''
             },
            ]);

            //$('#yadcf-filter--table-5').addClass('form_datetime');
            //$('#yadcf-filter--table-6').addClass('form_datetime');

            $(".form_datetime").datepicker({
                autoclose: true,
                format: "dd-mm-yyyy",
            });

            $(".form_datetime2").datepicker({
                format: "mm-yyyy",
                startView: "months",
                minViewMode: "months",
                autoclose: true,
            });

            $('.form_datetime').change(function(){
                var First = $('#yadcf-filter--table-5').val();
                var Last = $('#yadcf-filter--table-6').val();
                var filterdate = '';
                if(First && Last){
                    filterdate = '?datefirst='+First+"&dateend="+Last;
                    table.ajax.url('/Admin/Api/Registration/GetTimeSheet'+filterdate).load();
                }
            });

        });

        function GetStatus(val) {
            var data = new Array();
            data[0] = "<label class='label label-danger'><i class='fa fa-close'></i> Rejected</label>";
            data[1] = "<label class='label label-success'><i class='fa fa-clock-o'></i> Waiting</label>";
            data[2] = "<label class='label label-primary'><i class='fa fa-check'></i> Approved</label>";
            return data[val];
        }

        function Approve(id,idx,status1,status2) {
            $('#id').val(id);
            var regArray = theDataTable.row(idx).data();
            var ProjectManager = parseInt(regArray.approverOneId);
            var LineManager = parseInt(regArray.approverTwoId);
            var ProfileId = parseInt('@ViewBag.PreofileId');

            if(status1 == 1 && status2 ==1 && ProjectManager == ProfileId){
                $('.f-approve').show();
            }else if(status1 == 2 && status2 ==1 && LineManager == ProfileId){
                $('.f-approve').show();
            }else{
                $('.f-approve').hide();
            }

            //$('#myModal').modal('show');
            $('#mdl-name').text(regArray.contractor);
            $('#mdl-organ').text(regArray.department);
            $('#mdl-network').text(regArray.networkNumber);
            $('#mdl-activity').text(regArray.activiy);
            $('#mdl-cost').text(regArray.costCenter);
            $('#mdl-location').text(regArray.location);
            $('#mdl-timesheet').text(regArray.timeSheetType);
            $('#mdl-total').text(regArray.totalHours);
            $('#mdl-description').text(regArray.description);
            var period = JSON.parse(regArray.detailTimeSheet);
            var html = '';
            for (i = 0; i < period.length; i++) {
                html+= '<table class="col-md-4" style="height:70px; border:2px solid white">'+
                    '<tr><td class="col-md-12" style="color:#000" colspan="2" align="center"><small>'+period[i].Days+'</small></td></tr>'+
                    '<tr><td class="col-md-7" style="background-color:#7A55C9">'+ period[i].Dates +'</td><td class="col-md-5" style="background-color:red">'+ period[i].Hours+' Hr'+'</td></tr>'+
                '</table>'
            }
            $('#mdl-period').empty();
            $('#mdl-period').append(html);
        }

        function CheckBox(val){
            return "<input type='checkbox' class='srf' value='"+val+"'>";
        }


    </script>
}