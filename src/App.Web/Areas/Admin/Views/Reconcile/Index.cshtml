@{
    ViewData["Title"] = "Reconcile";
}

@section breadcrumb{
    <li>
        <span>Reconcile List</span>
    </li>
}

<h1 class="page-title">Reconcile <small>List</small></h1>

<div class="portlet light portlet-fit portlet-datatable bordered">
    <div class="portlet-title">
        <form class="form-inline" role="form" id="FormSubmit">
            <div class="form-group">
                <label for=""><strong>Months</strong></label>&nbsp;&nbsp;&nbsp;
                <select id="filter-months" class="form-control select-filter">
                    @Html.Raw(ViewBag.MonthsOption)
                </select>
            </div>
            <div class="form-group">
                &nbsp;<label for=""><strong>Years</strong></label>&nbsp;&nbsp;&nbsp;
                <select id="filter-years" class="form-control select-filter">
                    @Html.Raw(ViewBag.YearsOption)
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
    <div class="portlet-title">
        <span class="caption-subject font-blue sbold uppercase">Reconcile List</span>
        <div class="pull-right" id="toolbox">
            &nbsp;&nbsp;<a class="btn btn-success" href="javascript:void(0);" id="export-date"><i class="fa fa-file-excel-o"></i> Export to Excel By Months</a>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="portlet-body">
        <table id="table" class="table table-striped table-bordered table-hover no-border-bottom" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Contractor Name</th>
                    <th>SRF Number</th>
                    <th>Organization Unit</th>
                    <th>Sub Organization Unit</th>
                    <th>Account Name</th>
                    <th>Workstation</th>
                    <th>Communication</th>
                    <th>Rate</th>
                    <th>Price Type</th>
                    <th>Cost Center</th>
                    <th>Signum / Nonsignum</th>
                    <th>SRF Type</th>
                    <th>No NN</th>
                    <th>Jobstage</th>
                    <th>Service Work Package</th>
                    <th>Service Code</th>
                    <th>Position</th>
                    <th>Contract Start</th>
                    <th>Contract End</th>
                    <th>Price</th>
                    <th>Annual Leave</th>
                    <th>Overtime</th>
                    <th>Hourly Rate</th>
                    <th>OT Lumpsum</th>
                    <th>Laptop Allowance</th>
                    <th>Usim Broadband</th>
                    <th>Special Rate</th>
                    <th>Price Per Month</th>
                    <th>Duration</th>
                    <th>Total Price Per Month * Duration</th>
                    <th>Project</th>
                    <th>Line Manager</th>
                    <th>Project Manager</th>
                    <th>Supplier</th>
                    <th>Submitted Date</th>
                </tr>
                @*<tr id="table-filter">
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>*@
            </thead>
            @*<tfoot>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>*@
        </table>
    </div>
</div>

@{
    Html.RenderPartial("_FixedHeaderDatatablesAssets");
}

<style>
    /*.DTFC_LeftBodyWrapper {
        top: 17px !important;
    }*/

    .DTFC_LeftBodyWrapper table.DTFC_Cloned thead {
        display: none;
    }
</style>

@section scripts{
    <script>
        $(document).ready(function () {

            $common.setMenu("#menu-reconcile", "#menu-reconcile");
            $('select').select2();
            var datatableOption = {
                ajaxMethod: "POST",
                listUrl: "/Admin/Api/Srf/GetReconcile",
                detailUrl: "@Url.Action("Details")/",
                editUrl: "@Url.Action("Edit")/",
                deleteUrl: "/admin/api/Srf/",
                deleteAlertSuccess: "Srf name has been removed",
                fixedColumns: 2,
                columnDefs: [
                    {
                        "targets": 0,  // ID
                        "data": "number",
                        name: "number",
                        "defaultContent": "-",
                        "width": "300px"
                    },
                    {
                        "targets": 2, // SRF Number
                        "data": "number",
                        name: "Number",
                        "width": 200,
                        "render": function (data, type, row, meta) {
                            var Year = row.createdAt.substring(2, 4);
                            if (data) {
                                return "e-EID/KI-" + Year + ":SRF: " + data + " UEN";
                            } else {
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 1, // Contractor Name
                        "data": "contractor",
                        name: "Candidate.Name",
                        "width": 200
                    },
                    {
                        "targets": 3, // Organization Unit
                        "data": "department",
                        name: "Departement.Name",
                    },
                    {
                        "targets": 4, // Sub Organization Unit
                        "data": "departmentSub",
                        name: "DepartementSub.SubName",
                    },
                    {
                        "targets": 5, // Account Name
                        "data": "account",
                        name: "Account.Name",
                    },
                    {
                        "targets": 6, // Workstation
                        "data": "isWorkstation",
                        name: "isWorkstation",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            if (IsEscalation == true) {
                                if (row.isWorkstationEsc == true) {
                                    return "Yes";
                                } else {
                                    return "No";
                                }

                            } else {
                                if (data == true) {
                                    return "Yes";
                                } else {
                                    return "No";
                                }

                            }
                        }
                    },
                    {
                        "targets": 7, // Communication
                        "data": "isCommunication",
                        name: "isCommunication",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            if (IsEscalation == true) {
                                if (row.isCommnunicationEsc == true) {
                                    return "Yes";
                                } else {
                                    return "No";
                                }

                            } else {
                                if (data == true) {
                                    return "Yes";
                                } else {
                                    return "No";
                                }

                            }
                        }
                    },
                    {
                        "targets": 8, // Rate
                        "data": "rateType",
                        name: "RateType",
                        "render": function (data, type, row, meta) {
                            if (row.isEscalation == false) {
                                return "Normal Rate";
                            } else {
                                return "Special Rate";
                            }
                        }
                    },
                    {
                        "targets": 9, // Price Type
                        "data": "priceType",
                        name: "Candidate.Vacancy.PackageType.Name",
                    },
                    {
                        "targets": 10, // Cost Center
                        "data": "costCenter",
                        name: "CostCenter.Code",
                    },
                    {
                        "targets": 11, // Signum / Nonsignum
                        "data": "isHrms",
                        name: "IsHrms",
                        "render": function (data, type, row, meta) {
                            if (data==true) {
                                return "Yes";
                            } else {
                                return "No";
                            }
                        }
                    },
                    {
                        "targets": 12, // SRF Type
                        "data": "type",
                        name: "type",
                        "render": function (data, type, row, meta) {
                            if (parseInt(data) == 0) {
                                return "New";
                            } else {
                                return "Extension";
                            }
                        }
                    },
                    {
                        "targets": 13, // No NN
                        "data": "networkNumber",
                        name: "NetworkNumber.Code",
                    },
                    {
                        "targets": 14, // Jobstage
                        "data": "jobStage",
                        name: "Candidate.Vacancy.JobStage.Stage",
                    },
                    {
                        "targets": 15, // Service Work Package
                        "data": "servicePackCategory",
                        name: "ServicePack.ServicePackCategory.Name",
                    },
                    {
                        "targets": 16, // Service Code
                        "data": "servicePack.code",
                        name: "ServicePack.Code",
                    },
                    {
                        "targets": 17, // Position
                        "data": "servicePack.name",
                        name: "ServicePack.Name",
                    },
                    {
                        "targets": 18, // Contract Start
                        "data": "srfBegin",
                        name: "srfBegin",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            return moment(date).format("DD MMM YYYY");
                        }
                    },
                    {
                        "targets": 19, // Contract End
                        "data": "srfEnd",
                        name: "srfEnd",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            return moment(date).format("DD MMM YYYY");
                        }
                    },
                    {
                        "targets": 20, // Price
                        "data": "number",
                        name: "Number",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            var result = 0;
                            if (IsEscalation == true) {
                                result = parseInt(row.servicePackEsc.rate);
                            } else {
                                result = parseInt(row.servicePack.rate);
                            }
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + result + "</span>";
                        }
                    },
                    {
                        "targets": 21, // Annual
                        "data": "annualLeave",
                        name: "annualLeave",
                        "render": function (data, type, row, meta) {
                            if (parseInt(data) == 0) {
                                return "Annual Leave is Expired";
                            } else {
                                return data + " days";
                            }
                        }
                    },
                    {
                        "targets": 22, // Overtime
                        "data": "serviceLevel",
                        name: "ServiceLevel",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            if (IsEscalation==true) {
                                return row.otLevelEsc;
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "targets": 23, // Hourly Rate
                        "data": "servicePack.hourly",
                        name: "ServicePack.Hourly",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            var result = 0;
                            if (IsEscalation == true) {
                                result = parseInt(row.servicePackEsc.hourly);
                            } else {
                                result = parseInt(data);
                            }
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + result + "</span>";
                        }
                    },
                    {
                        "targets": 24, // OT Lumpsum
                        "data": "servicePack.hourly",
                        name: "ServicePack.Hourly",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            var result = 0;
                            if (IsEscalation == true) {
                                var otLevel = parseInt(row.otLevelEsc);
                                var hourly = parseInt(row.servicePackEsc.hourly);
                                result = parseInt(otLevel * hourly);
                            } else {
                                var otLevel = parseInt(row.serviceLevel);
                                var hourly = parseInt(row.servicePack.hourly);
                                result = parseInt(otLevel * hourly);
                            }
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + result + "</span>";
                        }
                    },
                    {
                        "targets": 25, // Laptop Allowance
                        "data": "isWorkstation",
                        name: "isWorkstation",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            var result = 0;
                            if (IsEscalation == true) {
                                if (row.isWorkstationEsc == true) {
                                    result = row.servicePackEsc.laptop;
                                }
                            } else {
                                if (data == true) {
                                    result = row.servicePack.laptop;
                                } 
                            }
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + result + "</span>";
                        }
                    },
                    {
                        "targets": 26, // Usim Broadband
                        "data": "isUsim",
                        name: "Candidate.Vacancy.isUsim",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            var result = 0;
                            if (IsEscalation == true) {
                                if (row.isUsim == true) {
                                    result = row.servicePackEsc.usin;
                                }
                            } else {
                                if (data == true) {
                                    result = row.servicePack.usin;
                                }
                            }
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + result + "</span>";
                        }
                    },
                    {
                        "targets": 27, // Special Rate
                        "data": "spectValue",
                        name: "spectValue",
                        "render": function (data, type, row, meta) {
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + data + "</span>";
                        }
                    },
                    {
                        "targets": 28, // Price Per Month
                        "data": "number",
                        name: "Number",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            var result = 0;
                            if (IsEscalation == true) {
                                var otLevel = parseInt(row.otLevelEsc);
                                var hourly = parseInt(row.servicePackEsc.hourly);
                                var otLumpsum = parseInt(otLevel * hourly);
                                var serviceRate = parseInt(row.servicePackEsc.rate);
                                var specialRate = parseInt(row.spectValue);
                                var laptop = row.isWorkstationEsc == false ? 0 : row.servicePackEsc.laptop;
                                var usin = row.isCommnunicationEsc == false ? 0 : row.servicePackEsc.usin;
                                result = serviceRate + otLumpsum + laptop + usin + specialRate;
                            } else {
                                var otLevel = parseInt(row.serviceLevel);
                                var hourly = parseInt(row.servicePack.hourly);
                                var otLumpsum = parseInt(otLevel * hourly);
                                var serviceRate = parseInt(row.servicePack.rate);
                                var specialRate = parseInt(row.spectValue);
                                var laptop = row.isWorkstation == false ? 0 : row.servicePack.laptop;
                                var usin = row.isUsim == false ? 0 : row.servicePack.usin;
                                result = serviceRate + otLumpsum + laptop + usin + specialRate;
                            }
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + result + "</span>";
                        }
                    },
                    {
                        "targets": 29, // Duration
                        "data": "number",
                        name: "Number",
                        "render": function (data, type, row, meta) {
                            var Duration = parseInt(row.duration);
                            return Duration + " Months";
                        }
                    },
                    {
                        "targets": 30, // Total Price Per Month * Duration
                        "data": "number",
                        name: "Number",
                        "render": function (data, type, row, meta) {
                            var IsEscalation = row.isEscalation;
                            var Duration = parseInt(row.duration);
                            var result = 0;
                            if (IsEscalation == true) {
                                var otLevel = parseInt(row.serviceLevel);
                                var hourly = parseInt(row.servicePackEsc.hourly);
                                var otLumpsum = parseInt(otLevel * hourly);
                                var serviceRate = parseInt(row.servicePackEsc.rate);
                                var specialRate = parseInt(row.spectValue);
                                var laptop = row.isWorkstationEsc == false ? 0 : row.servicePackEsc.laptop;
                                var usin = row.isCommnunicationEsc == false ? 0 : row.servicePackEsc.usin;
                                result = serviceRate + otLumpsum + laptop + usin + specialRate;
                            } else {
                                var otLevel = parseInt(row.serviceLevel);
                                var hourly = parseInt(row.servicePack.hourly);
                                var otLumpsum = parseInt(otLevel * hourly);
                                var serviceRate = parseInt(row.servicePack.rate);
                                var specialRate = parseInt(row.spectValue);
                                var laptop = row.isWorkstation == false ? 0 : row.servicePack.laptop;
                                var usin = row.isUsim == false ? 0 : row.servicePack.usin;
                                result = serviceRate + otLumpsum + laptop + usin + specialRate;
                            }
                            $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
                            return "<span class='numeric'>" + (result * Duration) + "</span>";
                        }
                    },
                    {
                        "targets": 31, // Project
                        "data": "project",
                        name: "NetworkNumber.Project.Name",
                    },
                    {
                        "targets": 32, // Line Manager
                        "data": "lineManager",
                        name: "ApproveOneBy.Name",
                    },
                    {
                        "targets": 33, // Project Manager
                        "data": "projectManager",
                        name: "ProjectManager.Name",
                    },
                    {
                        "targets": 34, // Supplier
                        "data": "agency",
                        name: "Candidate.Agency.Name",
                    },
                    {
                        "targets": 35, // Submitted Date
                        "data": "createdAt",
                        name: "createdAt",
                        "render": function (data, type, row, meta) {
                            var date = new Date(data);
                            return moment(date).format("DD MMM YYYY");
                        }
                    }
                ],
            }

            $datatables.init("#table", datatableOption);

            var table = $('#table')
                .on('init.dt', function (e, settings, json) { disableImmediateSearchDt(e, settings, json, '#table'); })
                .DataTable(); theDataTable = table;
            table.order([[35, 'desc']]);
            //table.search('').columns().search('').draw();
            table.on('draw', function () {
                $("span.numeric").autoNumeric('init', { aSep: '.', aDec: ',', mDec: 0 });
            });
           
            new $.fn.dataTable.Buttons(table, {
                buttons:
                [{
                    text: '<i class="fa fa-file-excel-o"></i> Export to Excel',
                    extend: 'excel',
                    exportOptions: {
                        columns: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
                        header: true,
                        footer: true
                    },
                    action: function (e, dt, button, config) {
                        window.location.href = "/Export/Reconcile/DoExport";
                    }
                }]
            });

            $('#export-date').click(function () {
                var month = $('#filter-months').val();
                var years = $('#filter-years').val();
                if (month && years) {
                    window.location.href = "/Export/Reconcile/DoExport?month=" + month + "&year=" + years;
                }
            });

            table.buttons(0, null).container().appendTo('#toolbox');
            $('.buttons-excel').each(function () {
                $(this).removeClass('dt-button buttons-excel buttons-html5').addClass('btn btn-default')
            });

            $('#FormSubmit').submit(function () {
                var month = $('#filter-months').val();
                var years = $('#filter-years').val();
                if (month && years) {
                    var loadUrl = "/Admin/Api/Srf/GetReconcile?month=" + month + "&year=" + years;
                    table.ajax.url(loadUrl).load();
                }
                return false;
            });
            
            yadcf.init(table, [
            //{
            //    column_number: 0,
            //    filter_type: 'text',
            //    filter_reset_button_text: false,
            //    filter_default_label: ''
            //},
            {
                column_number: 2,
                filter_type: 'text',
                filter_reset_button_text: false,
                filter_default_label: ''
            },
            //{
            //    column_number: 1,
            //    filter_type: 'text',
            //    filter_reset_button_text: false,
            //    filter_default_label: ''
            //},
              {
                  column_number: 3,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 4,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 5,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 6,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter',
                  data: [{
                      value: 'true',
                      label: 'Yes'
                  }, {
                      value: 'false',
                      label: 'No'
                  }]
              },
              {
                  column_number: 7,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter',
                  data: [{
                      value: 'true',
                      label: 'Yes'
                  }, {
                      value: 'false',
                      label: 'No'
                  }]
              },
              {
                  column_number: 8,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter',
                  data: [{
                      value: 'Normal',
                      label: 'Normal'
                  }, {
                      value: 'SpecialRate',
                      label: 'Special Rate'
                  }]
              },
              {
                  column_number: 9,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter',
                  data: [{
                      value: 'A',
                      label: 'A'
                  }, {
                      value: 'B',
                      label: 'B'
                  }, {
                      value: 'FSO',
                      label: 'FSO'
                  }]
              },
              {
                  column_number: 10,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 11,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter',
                  data: [{
                      value: 'true',
                      label: 'HRMS'
                  }, {
                      value: 'false',
                      label: 'Non HRMS'
                  }]
              },
              {
                  column_number: 12,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter',
                  data: [{
                      value: 'New',
                      label: 'New'
                  }, {
                      value: 'Extension',
                      label: 'Extension'
                  }]
              },
              {
                  column_number: 13,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 14,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 15,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 16,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 17,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 18,
                  filter_type: "date",
                  date_format: 'dd-mm-yy',
                  filter_reset_button_text: false,
              },
              {
                  column_number: 19,
                  filter_type: "date",
                  date_format: 'dd-mm-yy',
                  filter_reset_button_text: false,
              },
              {
                  column_number: 20,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 21,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 22,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 23,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 24,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 25,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 26,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 27,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 28,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 29,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 30,
                  filter_type: 'text',
                  filter_reset_button_text: false,
                  filter_default_label: ''
              },
              {
                  column_number: 31,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 32,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 33,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
              {
                  column_number: 34,
                  filter_reset_button_text: false,
                  filter_default_label: 'Select Filter'
              },
               {
                   column_number: 35,
                   filter_type: "date",
                   date_format: 'dd-mm-yy',
                   filter_reset_button_text: false,
               },
            ]);
        });
    </script>
}