@{
    ViewData["Title"] = "Pending Service Request Page ";
}

@section breadcrumb{
    <li>
        <span>Pending Service Request List </span>
    </li>
}

<h1 class="page-title">Pending Service Request <small>List</small></h1>
<div class="portlet light portlet-fit portlet-datatable bordered">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-blue sbold uppercase">Service Request List</span>
        </div>
        <div class="pull-right" id="toolbox"></div>
        <div class="clearfix"></div>
    </div>
    <div class="portlet-body">
        <table id="table" class="table table-striped table-bordered table-hover no-border-bottom">
            <thead>
                <tr>
                    <th rowspan="2">
                        @if (User.IsInRole("Line Manager") ||
                          User.IsInRole("Head Of Service Line") ||
                          User.IsInRole("Head Of Operation") ||
                          User.IsInRole("Service Coordinator") ||
                          User.IsInRole("Head Of Sourcing") ||
                          User.IsInRole("Head Of Non Operation"))
                        {
                            <input type="checkbox" id="check-all" />
                        }
                        else
                        {
                            <label>-</label>
                        }
                    </th>
                    <th rowspan="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
                    <th rowspan="2">SRF Number</th>
                    <th rowspan="2">Type Of Request</th>
                    <th rowspan="2">Employee Name</th>
                    <th rowspan="2">Contract Begin</th>
                    <th rowspan="2">Contract End</th>
                    <th rowspan="2">Annual Leave</th>
                    <th rowspan="2">Notif</th>
                    <th rowspan="2">Position</th>
                    <th rowspan="2">Sub Organization</th>
                    <th rowspan="2">Escalation</th>
                    <th colspan="3" class="text-center">Line Manager Approval</th>
                    <th rowspan="2">Description</th>
                    <th rowspan="2">Head Of Service Line</th>
                    <th rowspan="2">Head Of Operation</th>
                    <th rowspan="2">Head Of Non Operation</th>
                    <th rowspan="2">Head Of Sourcing</th>
                    <th colspan="3" class="text-center">Service Coordinator Approval</th>
                </tr>
                <tr>
                    <th>Status Approve</th>
                    <th>Line Manager</th>
                    <th>Approve Date - Remark</th>
                    <th>Status Approve</th>
                    <th>Service Coordinator</th>
                    <th>Approve Date - Remark</th>
                </tr>
                <tr class="hidden">
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
    @if (
                        User.IsInRole("Line Manager") ||
                        User.IsInRole("Head Of Service Line") ||
                        User.IsInRole("Head Of Operation") ||
                        User.IsInRole("Head Of Sourcing") ||
                        User.IsInRole("Service Coordinator") ||
                        User.IsInRole("Head Of Non Operation"))
    {
        <div class="portlet-body">
            <div class="box-footer clearfix">
                <form role="form" id="FormApprove" asp-controller="Srf" asp-action="ApproveMultiple">
                    <input type="hidden" class="ListId" name="data" value="" required />
                    <a href="javascript:void(0);" class="btn btn-danger pull-right" id="btn-reject" style="margin-left:10px;">Reject</a>
                    <button type="submit" name="status" value="true" class="btn btn-primary pull-right">Giving Approval</button>
                </form>
            </div>
        </div>
    }

</div>

<div id="ModalReject" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Rejected Confirmation</h4>
            </div>
            <div class="modal-body">
                <form role="form" id="FormApprove" asp-controller="Srf" asp-action="MultiReject">
                    <input type="hidden" class="ListId" name="data" value="" required />
                    <div class="box-body">
                        <div class="form-group">
                            <label for="remarks">Remarks</label>
                            <textarea id="remarks" name="remarks" class="form-control" rows="5" required></textarea>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer clearfix">
                        <button type="button" class="btn btn-default pull-right" data-dismiss="modal" style="margin-left:10px;">Cancel</button>
                        <button type="submit" class="btn btn-primary pull-right">Submit</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
            </div>
        </div>

    </div>
</div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Terminate / Blacklist Confirmation</h4>
            </div>
            <div class="modal-body">
                <form role="form" id="FormApprove" asp-controller="Srf" asp-action="ApproveTerminate">
                    <input type="hidden" name="id" id="id" required />
                    <div class="box-body">
                        <p>Are you sure want to terminate / blacklist this source : <strong id="Name"></strong></p>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Terminate - Blacklist Note / Remark</label>
                            <textarea id="notes" name="notes" class="form-control" rows="5" required></textarea>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer clearfix">
                        <button type="button" class="btn btn-default pull-right" data-dismiss="modal" style="margin-left:10px;">Cancel</button>
                        <button type="submit" value="4" name="submit" class="btn btn-danger">Blacklist</button>
                        <button type="submit" value="3" name="submit" class="btn btn-danger">Terminate</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
            </div>
        </div>

    </div>
</div>

@{
    Html.RenderPartial("_DatatablesAssets");
}

@section scripts{
    <script>
        $(document).ready(function () {

            $common.setMenu("#menu-srf", "#menu-srf");

            var saved = @((TempData["Saved"] != null).ToString().ToLower());
            if (saved == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.success("SRF request has been saved");
            }

            var submitted = @((TempData["Submitted"] != null).ToString().ToLower());
            if (submitted == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.success("SRF request has been submitted");
            }

            var approved = @((TempData["Approved"] != null).ToString().ToLower());
            if (approved == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.success("SRF request has been approved");
            }

            var terminated = @((TempData["Terminated"] != null).ToString().ToLower());
            if (terminated == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.success("Terminated has benn submitted");
            }

            var rejected = @((TempData["Rejected"] != null).ToString().ToLower());
            if (rejected == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.error("SRF request has been rejected");
            }

            var success = @((TempData["Success"] != null).ToString().ToLower());
            if (success == true) {
                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-top-right"
                }
                toastr.success("Srf request has been approved");
            }


            $('#check-all').hide();
            var datatableOption = {
                ajaxMethod: "POST",
                listUrl: "/Admin/Api/Srf/PostPending",
                detailUrl: "@Url.Action("Details")/",
                editUrl: "@Url.Action("Edit")/",
                deleteUrl: "/admin/api/srf/",
                deleteAlertSuccess: "Srf request has been removed",
                columnDefs: [
                    {
                        "targets": 0, // Checkbox Approve
                        "data": "createdAt",
                        name: "createdAt",
                        "render": function (data, type, row, meta) {
                            return CheckBox(row);
                        }
                    },
                    {
                        "targets": 1, // Action Button
                        "data": "createdAt",
                        name: "createdAt",
                        "render": function (data, type, row, meta) {
                            return Action(row);
                        }
                    },
                    {
                        "targets": 2,  // SRF Number
                        "data": "number",
                        name: "Number",
                        "render": function (data, type, row, meta) {
                            if(data){
                                var Year = row.createdAt.substring(2, 4);
                                return "e-EID/KI-" + Year + ":SRF: " + data + " UEN";
                            }else{
                                return "-";
                            }

                        }
                    },
                    {
                        "targets": 3, // Type Of Request
                        "data": "type",
                        name: "type",
                        "render": function (data, type, row, meta) {
                            var SrfStatus = parseInt(row.status);
                            if(SrfStatus==3){
                                return "Terminate";
                            }else if(SrfStatus==4){
                                return "Blacklist";
                            }else{
                                if(data=='0'){
                                    return "New";
                                }else{
                                    return "Extension";
                                }

                            }
                        }
                    },
                    {
                        "targets": 4, // Employee Name
                        "data": "employeeName",
                        name: "Candidate.Name",
                    },
                    {
                        "targets": 5, // Contract Begin
                        "data": "srfBegin",
                        name: "srfBegin",
                        "render": function (data, type, row, meta) {
                            if(data!=null && data!='0001-01-01T00:00:00'){
                                var date = new Date(data);
                                return moment(date).format("DD MMM YYYY");
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 6, // Contract End
                        "data": "srfEnd",
                        name: "srfEnd",
                        "render": function (data, type, row, meta) {
                            if(data!=null && data!='0001-01-01T00:00:00'){
                                var date = new Date(data);
                                return moment(date).format("DD MMM YYYY");
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 7, // Annual Leave
                        "data": "annualLeave",
                        name: "annualLeave",
                        "render": function (data, type, row, meta) {
                            if(data){
                                return data + " days";
                            }else{
                                return "-";
                            }

                        }
                    },
                    {
                        "targets": 8, // Notif
                        "data": "srfEnd",
                        name: "srfEnd",
                        "render": function (data, type, row, meta) {
                            if(row.isEndSoon==true){
                                return "<label class='label label-danger'><i class='fa fa-danger'> End Soon</label>";
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 9, // Position
                        "data": "position",
                        name: "ServicePack.Name",
                    },
                    {
                        "targets": 10, // Sub Organization
                        "data": "departmentSub",
                        name: "DepartementSub.SubName",
                    },
                    {
                        "targets": 11, // Escalation
                        "data": "spectValue",
                        name: "SpectValue",
                        "render": function (data, type, row, meta) {
                            if(row.isEscalation==true){
                                return "Special Rate";
                            }else{
                                return "Normal Rate";
                            }
                        }
                    },
                    {
                        "targets": 12, // Status Approve Line Manager
                        "data": "approveStatusOne",
                        name: "ApproveStatusOne",
                        "render": function (data, type, row, meta) {
                            var LineManager = parseInt(data);
                            var Escalation = parseInt(row.statusEscalationLineManager);
                            if(row.isEscalation==true){
                                return StatusEscalation(Escalation,true,false);
                            }else{
                                return Status(LineManager,true);
                            }
                        }
                    },
                    {
                        "targets": 13, // Line Manager Name
                        "data": "lineManager",
                        name: "ApproveOneBy.Name",
                    },
                    {
                        "targets": 14, // Approve Date - Remark Line Manager
                        "data": "dateApproveStatusOne",
                        name: "DateApproveStatusOne",
                        "render": function(data, type, row, meta){
                            if(data!=null && data!='0001-01-01T00:00:00'){
                                var date = new Date(data);
                                return moment(date).format("DD MMM YYYY");
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 15, // Description
                        "data": "description",
                        name: "Description",
                    },
                    {
                        "targets": 16, // Head Of Service Line
                        "data": "approveStatusTwo",
                        name: "approveStatusTwo",
                        "render": function (data, type, row, meta) {
                            if(row.isOperation==true){
                                var ServiceLine = parseInt(data);
                                var Escalation = parseInt(row.statusEscalationServiceLine);
                                if(row.isEscalation==true){
                                    return StatusEscalation(Escalation,false);
                                }else{
                                    return Status(ServiceLine,false);
                                }
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 17, // Head Of Operation
                        "data": "approveStatusThree",
                        name: "approveStatusThree",
                        "render": function (data, type, row, meta) {
                            if(row.isOperation==true){
                                var HeadOps = parseInt(data);
                                var Escalation = parseInt(row.statusEscalationHeadOperation);
                                if(row.isEscalation==true){
                                    return StatusEscalation(Escalation,false);
                                }else{
                                    return Status(HeadOps,false);
                                }
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 18, // Head Of Non Operation
                        "data": "approveStatusFour",
                        name: "approveStatusFour",
                        "render": function (data, type, row, meta) {
                            if(row.isOperation==false){
                                var HeadOps = parseInt(data);
                                var Escalation = parseInt(row.statusEscalationHeadOperation);
                                if(row.isEscalation==true){
                                    return StatusEscalation(Escalation,false);
                                }else{
                                    return Status(HeadOps,false);
                                }
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 19, // Head Of Sourcing
                        "data": "approveStatusFive",
                        name: "approveStatusFive",
                        "render": function (data, type, row, meta) {
                            if(row.isEscalation==true && row.spectValue > 1){
                                var Escalation = parseInt(row.statusEscalationHeadSourcing);
                                return StatusEscalation(Escalation,false,true);
                            }else{
                                return "-";
                            }
                        }
                    },
                    {
                        "targets": 20, // Status Approve Service Coordinator Name
                        "data": "approveStatusSix",
                        name: "approveStatusSix",
                        "render": function (data, type, row, meta) {
                            var SerCoord = parseInt(data);
                            var Escalation = parseInt(row.statusEscalationServiceCoordinator);
                            if(row.isEscalation==true){
                                return StatusEscalation(Escalation,false);
                            }else{
                                return Status(SerCoord,false);
                            }
                        }
                    },
                    {
                        "targets": 21, // Service Coordinator Name
                        "data": "serviceCoordinator",
                        name: "ApproveSixBy.Name",
                        "render": function (data, type, row, meta) {
                            return Status(row);
                        }
                    },
                    {
                        "targets": 22, // Approve Date - Remark Service Coordinator
                        "data": "dateApproveStatusSix",
                        name: "DateApproveStatusSix",
                        "render": function(data, type, row, meta){
                            if(data!=null && data!='0001-01-01T00:00:00'){
                                var date = new Date(data);
                                return moment(date).format("DD MMM YYYY");
                            }else{
                                return "-";
                            }
                        }
                    },
                ]
            };

            $datatables.init("#table", datatableOption);
            var table = $('#table')
                .on('init.dt', function(e, settings, json) { disableImmediateSearchDt(e, settings, json, '#table'); })
                .DataTable(); theDataTable = table;
            table.order( [[1,'desc']] );
            //table.search('').columns().search('').draw();

            //new $.fn.dataTable.Buttons(table, {
            //    buttons:
            //    [{
            //        text:'<i class="fa fa-file-excel-o"></i> Export to Excel',
            //        extend:'excel',
            //        exportOptions: {
            //            columns: [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],
            //            header: true,
            //            footer: true
            //        },
            //        action: function (e, dt, button, config) {
            //            window.location.href = "/Export/Srf";
            //        }
            //    }]
            //});

            //table.buttons( 0, null ).container().appendTo( '#toolbox' );
            //$('.buttons-excel').each(function() {
            //    $(this).removeClass('dt-button buttons-excel buttons-html5').addClass('btn btn-default')
            //});

            //Auto Check When Row Clicked
            $('#table tbody').on( 'click', 'tr', function () {
                ele = $(this).find('td input:checkbox')[0];
                ele.checked = ! ele.checked;
                var checkedVals = $('.srf:checkbox:checked').map(function() {
                    return this.value;
                }).get();
                var result = checkedVals.join(",");
                $('.ListId').val(result);
            } );


            // Check Event Trigger

            table.on('click','.srf',function(){
                var checkedVals = $('.srf:checkbox:checked').map(function() {
                    return this.value;
                }).get();
                var result = checkedVals.join(",");
                $('.ListId').val(result);
            });

            $('#check-all').click(function(e){
                if($(this).prop('checked')){
                    $('#table tbody tr td input[type="checkbox"]').each(function(){
                        $(this).prop('checked', true);
                    });
                }else{
                    $('#table tbody tr td input[type="checkbox"]').each(function(){
                        $(this).prop('checked', false);
                    });
                }
                var checkedVals = $('.srf:checkbox:checked').map(function() {
                    return this.value;
                }).get();
                var result = checkedVals.join(",");
                $('.ListId').val(result);
            });

            $('#btn-reject').click(function(){
                $('#remarks').val('');
                var DataId = $('#ModalReject .ListId').val();
                if(DataId){
                    $('#ModalReject').modal('show');
                }
            });

            // Filter Trigger

            yadcf.init(table, [
                {
                    column_number: 2, // Srf Number
                    filter_type:'text',
                    filter_reset_button_text: false,
                    filter_default_label: 'Select Filter'
                },
                {
                    column_number: 3, // Type Of request
                    filter_default_label:'Select Filter',
                    filter_reset_button_text: false,
                    data: [{
                        value: 'New',
                        label: 'New'
                    },{
                        value: 'Extension',
                        label: 'Extension'
                    },{
                        value: 'Blacklist',
                        label: 'Blacklist'
                    },{
                        value: 'Terminate',
                        label: 'Terminate'
                    }]
                },
                 {
                     column_number: 4, // Employee Name
                     filter_type:'text',
                     filter_reset_button_text: false,
                     filter_default_label: 'Select Filter'
                 },
                 {

                     column_number: 5, // Contract Begin
                     filter_type: "date",
                     date_format: 'dd-mm-yy',
                     filter_reset_button_text: false,
                 },
                 {
                     column_number: 6, // Contract End
                     filter_type: "date",
                     date_format: 'dd-mm-yy',
                     filter_reset_button_text: false,
                 },
                 {
                     column_number: 7, // Annual leave
                     filter_type:'text',
                     filter_reset_button_text: false,
                     filter_default_label: 'Select Filter'
                 },
                 {
                     column_number: 9, // SSOW
                     filter_reset_button_text: false,
                     filter_default_label: 'Select Filter'
                 },
                 {
                     column_number: 10, // Sub Org
                     filter_reset_button_text: false,
                     filter_default_label: 'Select Filter'
                 },
                 {
                     column_number: 12, // Line Manger Status
                     filter_reset_button_text: false,
                     filter_default_label:'Select Filter',
                     data: [
                         {
                             value: 'Submitted',
                             label: 'Submitted'
                         },
                         {
                             value: 'Waiting',
                             label: 'Waiting Submitted'
                         },
                         {
                             value: 'Approved',
                             label: 'Approved'
                         },
                         {
                             value: 'Reject',
                             label: 'Rejected'
                         }
                   ]
                 },
                 {
                     column_number: 13, // Line Manager Name
                     filter_reset_button_text: false,
                     filter_default_label: 'Select Filter'
                 },
                 {
                     column_number: 14, // Line Manager Date
                     filter_type: "date",
                     date_format: 'dd-mm-yy',
                     filter_reset_button_text: false,
                 },
                 {
                     column_number: 15, // Description
                     filter_type:'text',
                     filter_reset_button_text: false,
                     filter_default_label: 'Select Filter'
                 },
                 {
                     column_number: 16, // Status Service Line
                     filter_reset_button_text: false,
                     filter_default_label:'Select Filter',
                     data: [
                        {
                            value: 'Submitted',
                            label: 'Submitted'
                        },
                        {
                            value: 'Waiting',
                            label: 'Waiting'
                        },
                        {
                            value: 'Approved',
                            label: 'Approved'
                        },
                        {
                            value: 'Reject',
                            label: 'Rejected'
                        }
                     ]
                 },
                 {
                     column_number: 17, // Status Head Ops
                     filter_reset_button_text: false,
                     filter_default_label:'Select Filter',
                     data: [
                         {
                             value: 'Submitted',
                             label: 'Submitted'
                         },
                         {
                             value: 'Waiting',
                             label: 'Waiting'
                         },
                         {
                             value: 'Approved',
                             label: 'Approved'
                         },
                         {
                             value: 'Reject',
                             label: 'Rejected'
                         }
                     ]
                 },
                 {
                     column_number: 18, // Status Head Ops Non
                     filter_reset_button_text: false,
                     filter_default_label:'Select Filter',
                     data: [
                         {
                             value: 'Submitted',
                             label: 'Submitted'
                         },
                         {
                             value: 'Waiting',
                             label: 'Waiting'
                         },
                         {
                             value: 'Approved',
                             label: 'Approved'
                         },
                         {
                             value: 'Reject',
                             label: 'Rejected'
                         }
                     ]
                 },
                 {
                     column_number: 19, // Status Head of Sourcing
                     filter_reset_button_text: false,
                     filter_default_label:'Select Filter',
                     data: [
                         {
                             value: 'Submitted',
                             label: 'Submitted'
                         },
                         {
                             value: 'Waiting',
                             label: 'Waiting'
                         },
                         {
                             value: 'Approved',
                             label: 'Approved'
                         },
                         {
                             value: 'Reject',
                             label: 'Rejected'
                         }
                     ]
                 },
                 {
                     column_number: 20, // Service Coordinator Status
                     filter_reset_button_text: false,
                     filter_default_label:'Select Filter',
                     data: [
                         {
                             value: 'Submitted',
                             label: 'Submitted'
                         },
                         {
                             value: 'Waiting',
                             label: 'Waiting'
                         },
                         {
                             value: 'Approved',
                             label: 'Approved'
                         },
                         {
                             value: 'Reject',
                             label: 'Rejected'
                         }
                     ]
                 },
                 {
                     column_number: 21, // Service Coordinator Name
                     filter_reset_button_text: false,
                     filter_type:'text',
                     filter_default_label: 'Select Filter'
                 },
                 {
                     column_number: 22, // Service Coordinator Date
                     filter_type: "date",
                     date_format: 'dd-mm-yy',
                     filter_reset_button_text: false,
                 },
            ],'footer');

        });

        // Common Function

        function InputCheckBox(val){
            return "<input type='checkbox' class='srf' value='"+val+"'>";
        }

        function ShowDialog(id,name){
            $('#id').val(id);
            $('#Name').text(name);
            $('#notes').val('');
            $('#myModal').modal('show');
        }

        function CheckBox(object){

            if(object.isEscalation==true){ // With Escalation
                // 0 = Not Submit ,1 = Submitted,  2 = Approved,  3 = Rejected
                var StatusLineManager = parseInt(object.statusEscalationLineManager);
                var StatusServiceLine = parseInt(object.statusEscalationServiceLine);
                var StatusHeadOp = parseInt(object.statusEscalationHeadOperation);
                var StatusHeadSourc = parseInt(object.statusEscalationHeadSourcing);
                var StatusSercord = parseInt(object.statusEscalationServiceCoordinator);
                var SpectValue = parseInt(object.spectValue)

                var ProfileId = parseInt('@ViewBag.PreofileId');
                var LineManager = parseInt (object.approveOneId);
                var ServiceLine = parseInt (object.approveTwoId);
                var HeadOperation = parseInt (object.approveThreeId);
                var HeadNonOperation = parseInt (object.approveFourId);
                var HeadSourcing = parseInt (object.approveFiveId);
                var ServiceCoordinator = parseInt (object.approveSixId);

                if(ProfileId == LineManager){

                    if(StatusLineManager==1||StatusLineManager==3)
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

               if(ProfileId == ServiceLine)
               {
                   if(StatusLineManager==0 && (StatusServiceLine==0 || StatusServiceLine==3))
                   {
                       $('#check-all').show();
                       return InputCheckBox(object.id);
                   }

               }

                if(ProfileId == HeadOperation)
                {
                    if(StatusServiceLine==2 && (StatusHeadOp==0 || StatusHeadOp==3))
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

                if(ProfileId == HeadNonOperation)
                {
                    if(StatusServiceLine==2 && (StatusHeadOp==0 || StatusHeadOp==3))
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

                if(ProfileId == HeadSourcing)
                {
                    if(StatusHeadOp==2 && SpectValue > 0 && (StatusHeadSourc==0 || StatusHeadSourc==3))
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

                if(ProfileId == ServiceCoordinator)
                {
                    if (SpectValue > 0){
                        if(StatusHeadSourc==2 && (StatusSercord==0 || StatusSercord==3))
                        {
                            $('#check-all').show();
                            return InputCheckBox(object.id);
                        }
                    }else{
                        if(StatusHeadSourc==0 && (StatusSercord==0 || StatusSercord==3))
                        {
                            $('#check-all').show();
                            return InputCheckBox(object.id);
                        }
                    
                    }

                    

                }


            }else{ // No Escalation
                // 0 = Not Submit ,1 = Submitted,  2 = Approved,  3 = Rejected
                var UserCoordinator = object.serviceCoordinator;
                var StatusLineManager = parseInt(object.approveStatusOne);
                var StatusServiceLine = parseInt(object.approveStatusTwo);
                var StatusHeadOp = parseInt(object.approveStatusThree);
                var StatusHeadNonOp = parseInt(object.approveStatusFour);
                var StatusHeadSourc = parseInt(object.approveStatusFive);
                var StatusSercord = parseInt(object.approveStatusSix);

                var ProfileId = parseInt('@ViewBag.PreofileId');
                var LineManager = parseInt (object.approveOneId);
                var ServiceLine = parseInt (object.approveTwoId);
                var HeadOperation = parseInt (object.approveThreeId);
                var HeadNonOperation = parseInt (object.approveFourId);
                var HeadSourcing = parseInt (object.approveFiveId);
                var ServiceCoordinator = parseInt (object.approveSixId);

                if(ProfileId == LineManager)
                {
                    if((StatusLineManager == 0 || StatusLineManager == 3) && UserCoordinator!=null)
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

                if(ProfileId == ServiceLine)
                {
                    if((StatusServiceLine==0 || StatusServiceLine==3) && (StatusLineManager == 1 || StatusLineManager == 2))
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

                if(ProfileId == HeadOperation)
                {
                    if((StatusHeadOp==0 || StatusHeadOp==3) && StatusServiceLine == 2)
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

                if(ProfileId == HeadNonOperation)
                {
                    if((StatusHeadNonOp==0 || StatusHeadNonOp==3) && (StatusLineManager == 1 || StatusLineManager == 2))
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }

                if( ProfileId == ServiceCoordinator)
                {
                    if(((StatusSercord==0 || StatusSercord==3) && StatusHeadNonOp == 2) || (StatusSercord==0 && StatusHeadOp == 2))
                    {
                        $('#check-all').show();
                        return InputCheckBox(object.id);
                    }

                }


            }
            return "-";
        }

        function Action(object){
            var StatusSercord = parseInt(object.approveStatusSix);
            var StatusSercordEscalation = parseInt(object.statusEscalationServiceCoordinator);


            @if(User.IsInRole("Line Manager") || User.IsInRole("Administrator")){
                  @:if(object.isEscalation==false){
                    @:if(parseInt(StatusSercord)==2){ // Complete WithNo Escalation
                        @:return "<a class='edit' title='View Srf Detail'><i class='fa fa-files-o'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a href='/Admin/Srf/Extends/" + object.id + "' title='Extend SRF Requets'><i class='fa fa-tags'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a class='' id='btn-teriminate' OnClick='ShowDialog(\""+object.id+"\",\""+object.employeeName+"\")' title='Terminate - Blacklist Confirmation'><i class='fa fa-warning'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a class='remove' title='Delete Employee Name " + object.employeeName + "'><i class='fa fa-trash'></i></a>";
                    @:}else{ // Not Complete WithNo Escalation
                        @:return "<a class='edit' title='View Srf Detail'><i class='fa fa-files-o'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a class='remove' title='Delete Employee Name " + object.employeeName + "'><i class='fa fa-trash'></i></a>";
                    @:}
                @:}else{
                    @:if(parseInt(StatusSercord)==2 || parseInt(StatusSercordEscalation)==2){ // Complete WithEscalation
                        @:return "<a href='/Admin/Escalation/Edit/"+object.id+"' title='View Srf Detail WithEscalation'><i class='fa fa-file-text-o'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a href='/Admin/Srf/Extends/" + object.id + "' title='Extend SRF Requets'><i class='fa fa-tags'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a class='' id='btn-teriminate' OnClick='ShowDialog(\""+object.id+"\",\""+object.employeeName+"\")' title='Terminate - Blacklist Confirmation'><i class='fa fa-warning'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a class='remove' title='Delete Employee Name " + object.employeeName + "'><i class='fa fa-trash'></i></a>";
                    @:}else{ // Not Complete WithEscalation
                        @:return "<a href='/Admin/Escalation/Edit/"+object.id+"' title='View Srf Detail WithEscalation'><i class='fa fa-file-text-o'></i></a>&nbsp;&nbsp;&nbsp;"+
                        @:"<a class='remove' title='Delete Employee Name " + object.employeeName + "'><i class='fa fa-trash'></i></a>";
                    @:}
                @:}
            }else{
                if (User.IsInRole("HR Agency")){
                    @:if (parseInt(object.status) == 3 || parseInt(object.status) == 2){
                       @:if(object.isEscalation==false){
                          @:return  "<a class='edit' title='View Srf Detail'><i class='fa fa-files-o'></i></a>&nbsp;&nbsp;&nbsp;"+
                          @:"<a class='' id='btn-teriminate' OnClick='ShowDialog(\"" + object.id + "\",\"" + object.employeeName + "\")' title='Terminate - Blacklist Confirmation'><i class='fa fa-warning'></i></a>&nbsp;&nbsp;&nbsp";
                       @:}else{
                           @:return "<a href='/Admin/Escalation/Edit/"+object.id+"' title='View Srf Detail WithEscalation'><i class='fa fa-file-text-o'></i></a>&nbsp;&nbsp;&nbsp;"+
                           @:"<a class='' id='btn-teriminate' OnClick='ShowDialog(\"" + object.id + "\",\"" + object.employeeName + "\")' title='Terminate - Blacklist Confirmation'><i class='fa fa-warning'></i></a>&nbsp;&nbsp;&nbsp";
                       @:}

                    @:}else{
                       @:if(object.isEscalation==false){
                          @:return  "<a class='edit' title='View Srf Detail'><i class='fa fa-files-o'></i></a>&nbsp;&nbsp;&nbsp;";
                       @:}else{
                           @:return "<a href='/Admin/Escalation/Edit/"+object.id+"' title='View Srf Detail WithEscalation'><i class='fa fa-file-text-o'></i></a>&nbsp;&nbsp;&nbsp;";
                       @:}
                    @:}
                }else{
                    @:if(object.isEscalation==false){
                        @:return  "<a class='edit' title='View Srf Detail'><i class='fa fa-files-o'></i></a>&nbsp;&nbsp;&nbsp;";
                    @:}else{
                        @:return "<a href='/Admin/Escalation/Edit/"+object.id+"' title='View Srf Detail WithEscalation'><i class='fa fa-file-text-o'></i></a>&nbsp;&nbsp;&nbsp;";
                    @:}
                }
            }
            return "-";
        }

        function Status(val,IsLm){
            if(parseInt(val)==0){
                if(IsLm){
                    return "<label class='label label-srf'><i class='fa fa-clock-o'></i> Waiting Submitted</label>";
                }else{
                    return "<label class='label label-srf'><i class='fa fa-clock-o'></i> Waiting</label>";
                }
            }else if(parseInt(val)==1){
                return "<label class='label label-primary'><i class='fa fa-check-circle-o'></i> Submitted</label>";
            }else if(parseInt(val)==2){
                return "<label class='label label-primary'><i class='fa fa-check'></i> Approved </label>";
            }else if(parseInt(val)==3){
                return "<label class='label label-danger'><i class='fa fa-times'></i> Reject </label>";
            }else{
                return "-";
            }
        }

        function StatusEscalation(val,IsLm,IsHos){
            if(IsLm){
                if(parseInt(val)==1){
                    return "<label class='label label-srf'><i class='fa fa-clock-o'></i> Waiting Submitted</label>";
                }else{
                    return "<label class='label label-primary'><i class='fa fa-check-circle-o'></i> Submitted </label>";
                }
            }else{
                if(parseInt(val)==0){
                    return "<label class='label label-srf'><i class='fa fa-clock-o'></i> Waiting </label>";
                }else if(parseInt(val)==1){
                    return "<label class='label label-primary'><i class='fa fa-check-circle-o'></i> Submitted </label>";
                }else if(parseInt(val)==2){
                    return "<label class='label label-primary'><i class='fa fa-check'></i> Approved </label>";
                }else if(parseInt(val)==3){
                    return "<label class='label label-danger'><i class='fa fa-times'></i> Reject </label>";
                }else{
                    return "-";
                }
            }
        }

    </script>
}